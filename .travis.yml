language: cpp

matrix:
  include:

    - os: linux
      dist: xenial
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-5.0']
          packages: ['clang-5.0', 'libstdc++-8-dev']
      env: COMPILER='clang++-5.0'


    - os: linux
      dist: xenial
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-6.0']
          packages: ['clang-6.0', 'libstdc++-8-dev']
      env: COMPILER='clang++-6.0'

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7']
      env: COMPILER='g++-7'

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8']
      env: COMPILER='g++-8'

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8', 'lcov', 'libperlio-gzip-perl', 'libjson-perl']
      env: COMPILER='g++-8' COVERAGE=1



before_script:
  - # Looks like we need newer lcov
  - (cd ~ && git clone https://github.com/linux-test-project/lcov.git && cd lcov && sudo make PREFIX=/usr install)
  - export CXX=${COMPILER}
  - ./autogen.sh
  - pip install --user cpp-coveralls

script:
  - |
    if [[ "${COVERAGE}" == "1" ]]; then
    	./configure --prefix=/home/travis/fuxbin --enable-code-coverage CXXFLAGS="-O0 -g"
    else
    	./configure --prefix=/home/travis/fuxbin
    fi
  - make && make check
  - make install && make installcheck
  - export TUXDIR=/home/travis/fuxbin
  - pip3 install tuxedo

after_success:
  - |
    if [[ "${COVERAGE}" == "1" ]]; then
      lcov --gcov-tool gcov-8 --capture --base-directory `pwd` --directory `pwd` --output-file coverage.info
      lcov --gcov-tool gcov-8 --remove coverage.info '*/install-tests/*' '/usr/*' '*/tests/*' '*/third_party/*' --output-file coverage.info
      lcov --gcov-tool gcov-8 --list coverage.info
      bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
    fi
  - |
    if [[ "${COVERAGE}" == "1" ]]; then
      coveralls --gcov gcov-8 --build-root=`pwd` --exclude install-tests --exclude third_party --exclude tests --gcov-options '\-lp'
    fi
